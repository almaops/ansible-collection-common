---
# Certbot auto-renew cron job configuration (for certificate renewals).
certbot_auto_renew: true
certbot_auto_renew_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
certbot_auto_renew_hour: "3"
certbot_auto_renew_minute: "30"
certbot_auto_renew_options: "--quiet --no-self-upgrade"

certbot_testmode: false
certbot_hsts: false

certbot_package: certbot

# Parameters used when creating new Certbot certs.
certbot_create_if_missing: false
# Possible methods: webroot, standalone, dns-cloudflare
certbot_create_method: standalone
certbot_admin_email: email@example.com

# Cloudflare credentials file
certbot_cloudflare_credentials_dir: "/root/.secrets"
certbot_cloudflare_credentials_file: "{{ certbot_cloudflare_credentials_dir }}/cloudflare.ini"
certbot_cloudflare_api_token: "{{ undef(hint='You must set your Cloudflare API token in variable certbot_cloudflare_api_token') }}"
certbot_cloudflare_propagation_seconds: 10

# Default webroot, overwritten by individual per-cert webroot directories
certbot_webroot: /var/www/letsencrypt

certbot_certs: []
# - email: janedoe@example.com
#   webroot: "/var/www/html/"
#   domains:
#     - example1.com
#     - example2.com
# - domains:
#     - example3.com

certbot_create_command: >-
  {{ certbot_script }} certonly --{{ certbot_create_method  }}
  {{ '--dns-cloudflare-credentials' if certbot_create_method == 'dns-cloudflare'  else '' }}
  {{ certbot_cloudflare_credentials_file if certbot_create_method == 'dns-cloudflare'  else '' }}
  {{ '--dns-cloudflare-propagation-seconds' if certbot_create_method == 'dns-cloudflare'  else '' }}
  {{ certbot_cloudflare_propagation_seconds if certbot_create_method == 'dns-cloudflare'  else '' }}
  {{ '--hsts' if certbot_hsts else '' }}
  {{ '--test-cert' if certbot_testmode else '' }}
  --noninteractive --agree-tos
  --email {{ cert_item.email | default(certbot_admin_email) }}
  {{ '--webroot-path ' if certbot_create_method == 'webroot'  else '' }}
  {{ cert_item.webroot | default(certbot_webroot) if certbot_create_method == 'webroot' else '' }}
  -d {{ cert_item.domains | join(',') }}
  {{ '--pre-hook /etc/letsencrypt/renewal-hooks/pre/stop_services'
    if certbot_create_standalone_stop_services
  else '' }}
  {{ '--post-hook /etc/letsencrypt/renewal-hooks/post/start_services'
    if certbot_create_standalone_stop_services
  else '' }}

certbot_create_standalone_stop_services:
  - nginx
  # - apache
  # - varnish

# Available options: 'package', 'snap', 'source'.
certbot_install_method: 'package'

# Extra certbot packages, eg Cloudflare plugin
certbot_packages:
  - python3-certbot-dns-cloudflare

# Source install configuration.
certbot_repo: https://github.com/certbot/certbot.git
certbot_version: master
certbot_keep_updated: true

# Where to put Certbot when installing from source.
certbot_dir: /opt/certbot
